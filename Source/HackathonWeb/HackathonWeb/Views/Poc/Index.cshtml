
@{
    ViewBag.Title = "Poc";
}

<h2>Poc</h2>


<meta name="viewport" content="initial-scale=1.0, width=device-width" />



<div style="width: 640px; height: 480px" id="mapContainer"></div>
<br />
<div style="width: 640px; height: 480px" id="mapNavigator"></div>
<br />
<div style="width: 640px; height: 480px" id="mapInteractor"></div>


<script src="http://js.api.here.com/v3/3.0/mapsjs-core.js"
        type="text/javascript" charset="utf-8"></script>
<script src="http://js.api.here.com/v3/3.0/mapsjs-service.js"
        type="text/javascript" charset="utf-8"></script>
<script src="http://js.api.here.com/v3/3.0/mapsjs-mapevents.js"
        type="text/javascript" charset="utf-8"></script>
<script src="http://js.api.here.com/v3/3.0/mapsjs-ui.js"
        type="text/javascript" charset="utf-8"></script>
<link rel="stylesheet" type="text/css"
      href="http://js.api.here.com/v3/3.0/mapsjs-ui.css" />
<script>
    // Initialize the platform object:
    var platform = new H.service.Platform({
        'app_id': '9shB49HQGahETgr6LWDZ',
        'app_code': '3CPwa96KM9xO-Z90EOBNig'
    });

    // Obtain the default map types from the platform object
    var maptypes = platform.createDefaultLayers();

    // Instantiate (and display) a map object:
    var map = new H.Map(
        document.getElementById('mapContainer'),
        maptypes.normal.map,
        {
            zoom: 17,
            center: { lng: 121.231749, lat: 25.077184 }
        });

    var naviMap = new H.Map(
        document.getElementById('mapNavigator'),
        maptypes.normal.map,
        {
            zoom: 15,
            center: { lng: 121.521, lat: 25.04885 }
        });
    // Create the parameters for the routing request:
    var routingParameters = {
        // The routing mode:
        'mode': 'fastest;pedestrian',
        // The start point of the route:
        'waypoint0': 'geo!25.05258,121.52036',
        // The end point of the route:
        'waypoint1': 'geo!25.04459,121.52503',
        // To retrieve the shape of the route we choose the route
        // representation mode 'display'
        'representation': 'display'
    };

    // Define a callback function to process the routing response:
    var onResult = function (result) {
        var route,
            routeShape,
            startPoint,
            endPoint,
            linestring;
        if (result.response.route) {
            // Pick the first route from the response:
            route = result.response.route[0];
            // Pick the route's shape:
            routeShape = route.shape;

            // Create a linestring to use as a point source for the route line
            linestring = new H.geo.LineString();

            // Push all the points in the shape into the linestring:
            routeShape.forEach(function (point) {
                var parts = point.split(',');
                linestring.pushLatLngAlt(parts[0], parts[1]);
            });

            // Retrieve the mapped positions of the requested waypoints:
            startPoint = route.waypoint[0].mappedPosition;
            endPoint = route.waypoint[1].mappedPosition;

            // Create a polyline to display the route:
            routeLine = new H.map.Polyline(linestring, {
                style: { lineWidth: 10 },
                arrows: { fillColor: 'white', frequency: 2, width: 0.8, length: 0.7 }
            });

            // Create a marker for the start point:
            var startMarker = new H.map.Marker({
                lat: startPoint.latitude,
                lng: startPoint.longitude
            });

            // Create a marker for the end point:
            var endMarker = new H.map.Marker({
                lat: endPoint.latitude,
                lng: endPoint.longitude
            });

            // Add the route polyline and the two markers to the map:
            naviMap.addObjects([routeLine, startMarker, endMarker]);

            // Set the map's viewport to make the whole route visible:
            naviMap.setViewBounds(routeLine.getBounds());


            var interactMap = new H.Map(
                document.getElementById('mapInteractor'),
                maptypes.normal.map,
                {
                    zoom: 17,
                    center: { lng: 121.231749, lat: 25.077184 }
                });
            var mapEvents = new H.mapevents.MapEvents(interactMap);
            var behavior = new H.mapevents.Behavior(mapEvents);
            var ui = H.ui.UI.createDefault(interactMap, defaultLayers);

        }
    };

    // Get an instance of the routing service:
    var router = platform.getRoutingService();

    // Call calculateRoute() with the routing parameters,
    // the callback and an error callback function (called if a
    // communication error occurs):
    router.calculateRoute(routingParameters, onResult,
        function (error) {
            alert(error.message);
        });

</script>
